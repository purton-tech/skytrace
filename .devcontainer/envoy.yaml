admin:
  access_log_path: /tmp/admin_access.log
  address:
    socket_address: { address: 0.0.0.0, port_value: 7401 }

static_resources:
  listeners:
  - name: listener1
    address:
      socket_address: { address: 0.0.0.0, port_value: 7400 }
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: ingress_http
          codec_type: AUTO
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains: ["*"]
              routes:
              # Sign in and registration
              - match: { prefix: "/auth" }
                route: { cluster: ext-authn }
                typed_per_filter_config:
                  envoy.filters.http.lua:
                    "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.LuaPerRoute
                    disabled: true
                  envoy.filters.http.ext_authz:
                    "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                    disabled: true

              # This will catch all incoming grpc requests (based on the header) and 
              # send them to our api.
              - match: { prefix: "/", grpc: {}  }
                route: { cluster: app }
                # Disable auth
                typed_per_filter_config:
                  envoy.filters.http.lua:
                    "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.LuaPerRoute
                    disabled: true
                  envoy.filters.http.ext_authz:
                    "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                    disabled: true

              # Allow gRPC web access to our server. In this case if authentication-type
              # header is set to cookie then ext auth is triggered. Used by client side typescript.
              - match: 
                  prefix: "/"
                  headers:
                    - name: "x-grpc-web"
                      exact_match: "1"
                    - name: "authentication-type"
                      exact_match: "cookie"
                route: { cluster: app }
                # Disable headers added by LUA script to response
                typed_per_filter_config:
                  envoy.filters.http.lua:
                    "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.LuaPerRoute
                    disabled: true

              # Allow gRPC access to our server - This is token based access to the API.
              # We use gRPC web from the cli as gRPC over cloudflare tunnels doesn't seem to work.
              - match: 
                  prefix: "/"
                  headers:
                    - name: "x-grpc-web"
                      exact_match: "1"
                route: { cluster: app }
                # Disable auth and the lua script that adds security headers 
                typed_per_filter_config:
                  envoy.filters.http.ext_authz:
                    "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                    disabled: true
                  envoy.filters.http.lua:
                    "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.LuaPerRoute
                    disabled: true

              # Web request to our app
              - match: { prefix: "/app" }
                route: { cluster: app }
                # We have a function to add security headers as the web app needed to open up
                # some permissions
                typed_per_filter_config:
                  envoy.filters.http.lua:
                    "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.LuaPerRoute
                    name: security_headers.lua

              # Paths that don't need authentication

              # Images JS, and CSS.
              - match: { prefix: "/static" }
                route: { cluster: app }
                typed_per_filter_config:
                  envoy.filters.http.ext_authz:
                    "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                    disabled: true
                  envoy.filters.http.lua:
                    "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.LuaPerRoute
                    disabled: true
                    
              # Everything else passes in to here. The marketing pages
              - match: { prefix: "/" }
                route: 
                  host_rewrite_literal: skytrace.pages.dev
                  cluster: www
                typed_per_filter_config:
                  envoy.filters.http.ext_authz:
                    "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                    disabled: true
                  envoy.filters.http.lua:
                    "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.LuaPerRoute
                    name: zola_headers.lua
     
          http_filters:
          # Convert incoming gRPC web request to proper gRPC
          - name: envoy.filters.http.grpc_web
          # Create a restful API from our protobuf definitions
          # https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_filters/grpc_json_transcoder_filter
          - name: envoy.filters.http.grpc_json_transcoder
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_json_transcoder.v3.GrpcJsonTranscoder
              proto_descriptor: "/tmp/envoy/api.pb"
              auto_mapping: true
              services: ["trace.Trace"]
              print_options:
                add_whitespace: true
                always_print_primitive_fields: true
                always_print_enums_as_ints: false
                preserve_proto_field_names: true
          # Use Authn Proxy to authenticate routes.  
          - name: envoy.filters.http.ext_authz
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
              http_service:
                server_uri:
                  uri: auth:9090
                  cluster: ext-authn
                  timeout: 0.25s
                authorization_request:
                  allowed_headers:
                    patterns: 
                      - exact: "cookie"
                authorization_response:
                  allowed_upstream_headers_to_append:
                    patterns: 
                      - exact: "x-user-id"
          # Add all the security headers, if an item is already set, it will be left alone.
          - name: envoy.filters.http.lua
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua

              source_codes:
                zola_headers.lua:
                  inline_string: |
                    function envoy_on_response(response_handle)

                      response_handle:headers():add("Cache-Control", "none");

                      csp = "default-src 'none'; script-src 'self'; img-src 'self' data: https://skytrace.goatcounter.com/count; style-src 'self'; frame-src https://www.youtube-nocookie.com;"
                      response_handle:headers():add("Content-Security-Policy", csp);
                      response_handle:headers():add("X-Frame-Options", "deny");
                      response_handle:headers():add("X-XSS-Protection", "1; mode=block");
                      response_handle:headers():add("X-Content-Type-Options", "nosniff");
                      response_handle:headers():add("Referrer-Policy", "no-referrer");
                      response_handle:headers():add("X-Download-Options", "noopen");
                      response_handle:headers():add("X-DNS-Prefetch-Control", "off");
                      response_handle:headers():add("Strict-Transport-Security", "max-age=31536000; includeSubDomains");
                      response_handle:headers():add("Permissions-Policy",
                                                    "accelerometer=(), "..
                                                    "camera=(), "..
                                                    "geolocation=(), "..
                                                    "gyroscope=(), "..
                                                    "magnetometer=(), "..
                                                    "microphone=(), "..
                                                    "payment=(), "..
                                                    "usb=()");
                      response_handle:headers():remove("X-Powered-By");
                    end
                # Lock everything down
                security_headers.lua:
                  inline_string: |
                    function envoy_on_response(response_handle)

                      response_handle:headers():add("Cache-Control", "none");

                      csp = "default-src 'none'; script-src 'self'; img-src 'self'; style-src 'self'; connect-src 'self'";
                      response_handle:headers():add("Content-Security-Policy", csp);
                      response_handle:headers():add("X-Frame-Options", "deny");
                      response_handle:headers():add("X-XSS-Protection", "1; mode=block");
                      response_handle:headers():add("X-Content-Type-Options", "nosniff");
                      response_handle:headers():add("Referrer-Policy", "no-referrer");
                      response_handle:headers():add("X-Download-Options", "noopen");
                      response_handle:headers():add("X-DNS-Prefetch-Control", "off");
                      response_handle:headers():add("Strict-Transport-Security", "max-age=31536000; includeSubDomains");
                      response_handle:headers():add("Permissions-Policy",
                                                    "accelerometer=(), "..
                                                    "camera=(), "..
                                                    "geolocation=(), "..
                                                    "gyroscope=(), "..
                                                    "magnetometer=(), "..
                                                    "microphone=(), "..
                                                    "payment=(), "..
                                                    "usb=()");
                      response_handle:headers():remove("X-Powered-By");
                    end
              inline_code: |
                function envoy_on_response(response_handle)
                end
          - name: envoy.filters.http.router

  clusters:
  # The authentication service hand /auth for UI and ext_authz
  - name: ext-authn
    connect_timeout: 1.25s
    type: strict_dns
    lb_policy: round_robin
    load_assignment:
      cluster_name: ext-authn
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: auth
                port_value: 9090

  # Marketing Pages Development
  - name: www
    connect_timeout: 1.25s
    type: strict_dns
    lb_policy: round_robin
    dns_lookup_family: V4_ONLY
    load_assignment:
      cluster_name: www
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: development
                port_value: 7404

  # Marketing Pages - Reverse Proxy to Cludflare Pages
  - name: www-prod
    type: LOGICAL_DNS
    connect_timeout: 500s
    dns_lookup_family: V4_ONLY
    load_assignment:
      cluster_name: www
      endpoints:
        - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: trace-3ja.pages.dev
                    port_value: 443
    transport_socket:
      name: envoy.transport_sockets.tls
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
        sni: trace-3ja.pages.dev

  # The web application and api server
  - name: app
    connect_timeout: 1.25s
    type: strict_dns
    lb_policy: round_robin
    dns_lookup_family: V4_ONLY
    # I had to comment this out or the route doesn't work.
    #http2_protocol_options: {} # Add this then gRPC starts working
    load_assignment:
      cluster_name: app
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: development
                port_value: 7403